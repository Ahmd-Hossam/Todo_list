{"version":3,"sources":["./src/app/views/auth/login/login.component.ts","./src/app/views/auth/login/login.component.html","./src/app/views/auth/auth.module.ts","./src/app/views/auth/register/register.component.ts","./src/app/views/auth/register/register.component.html","./src/app/views/auth/auth-routing.module.ts"],"names":[],"mappings":"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","file":"views-auth-auth-module.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { NavComponent } from 'src/app/layout/nav/nav.component';\nimport { AuthService } from 'src/app/shard/services/auth.service';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LogInComponent implements OnInit {\n  myform!: FormGroup;\n  submited: boolean = false\n  loading :boolean = false;\n  returnUrl:string=''\n  ShowPassord: boolean = false;\n\n \n  constructor(private auth_Ser: AuthService, private toaster: ToastrService, private router:Router) { \n    // redirect to home if already logged in\n    if (this.auth_Ser.currentUserValue) { \n      this.router.navigate(['/']);\n    }\n  }\n  \n  \n\n  ngOnInit(): void {\n    this.biuld();\n  }\n\n\n\n  biuld() {\n    this.myform = new FormGroup({\n      email: new FormControl('', Validators.compose([\n        Validators.required,\n        Validators.email,\n        Validators.pattern('[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}$')\n      ])),\n      password: new FormControl('', Validators.compose([\n        Validators.required,\n        Validators.pattern(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d).{8,15}$/)        \n      ]))\n    })\n  }\n\n  // convenience getter for easy access to form fields\n  get f() { return this.myform.controls; }\n\n\n  login() {\n    this.submited = true;\n    // stop here if form is invalid\n    \n    if (this.myform.invalid) {\n      return;\n    }\n    this.loading = true;\n    this.auth_Ser.login(this.myform.value).subscribe(\n      res=>{\n        localStorage.setItem('access_token', res.token)\n        localStorage.setItem('user_data', JSON.stringify(res.user))//convert object to jason string\n        this.toaster.success(\"Login successfuly\", \"Success\")\n        this.router.navigate(['../user/notes']).then(\n  \n        )\n      },\n      err=>{\n        this.toaster.error(\" Check your Email or password \", err.error)\n      }\n    )\n  }\n\n  showPassword() {\n    this.ShowPassord = !this.ShowPassord\n  } \n\n}\n","<section class=\"body\">\n    <div class=\"container\">\n        <form [formGroup]=\"myform\" (submit)='login()'>\n            <h1 class=\"text-center\">login</h1>\n            <div class='form-group'>\n                <label for=\"\"> email </label> &nbsp;\n                <input type=\"email\" formControlName='email' [ngClass]=\"{'is-invalid': submited && f.email.errors}\"   class='form-control' placeholder=\"Email\">\n            </div>\n    \n            <div class='form-group pass_group'>\n                <label for=\"postDescription\"> password </label>\n                <input [type]=\"ShowPassord == false ? 'password' : 'text'\" formControlName='password' name=\"password\" [ngClass]=\"{'is-invalid': submited && f.password.errors}\"   rows=\"6\" class=\"form-control\" placeholder=\"Password\" minlength=\"8\" >\n                <i class=\"fa\" [hidden]=\"!myform.controls.password?.value\" [ngClass]=\"{'fa-eye-slash': !ShowPassord,'fa-eye': ShowPassord }\" (click)=\"showPassword()\"> </i>\n            </div>\n\n            <button class=\"btn btn-primary\"> Login </button>\n            <br>\n            <p class=\"text-center\"> dont have acount ? <a routerLink='../auth/register'> Signup </a></p>\n            <!--\n                  <button [disabled]=\"loading\" class=\"btn btn-primary\">\n                <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\n                Login\n            </button>     \n            -->\n     \n        </form>\n    </div>\n</section>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AuthRoutingModule } from './auth-routing.module';\nimport { LogInComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\n\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [LogInComponent, RegisterComponent],\n  imports: [\n    CommonModule,\n    AuthRoutingModule,\n    FormsModule,\n    ReactiveFormsModule\n  ]\n})\nexport class AuthModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, NgForm, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { AuthService } from 'src/app/shard/services/auth.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n  myform!:FormGroup;\n  submited: boolean = false\n  loading: boolean = false;\n  ShowPassord: boolean = false\n\n  constructor(private auth_ser:AuthService, private fb:FormBuilder, private toastr:ToastrService, private router:Router) {\n      // redirect to home if already logged in\n      if (this.auth_ser.currentUserValue) { \n        this.router.navigate(['/']);\n      }\n   }\n\n  ngOnInit(): void {\n    this.build();\n  }\n  \n\n\n  build(){\n    this.myform= this.fb.group({\n      name:['', Validators.required],\n      email:['', Validators.compose([\n        Validators.required,\n        Validators.email,\n        Validators.pattern('[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}$')\n      ])],\n      password:['', Validators.compose([\n        Validators.required,\n        //Validators.pattern(/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{8,}$/),\n        Validators.pattern(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d).{8,15}$/)\n      ])],\n      age:['',Validators.required]\n    })\n  }\n\n  // convenience getter for easy access to form fields\n  get f() { return this.myform.controls; }\n\n  register(){\n    this.submited = true;\n    // stop here if form is invalid\n    if (this.myform.invalid) {\n      return;\n    }\n    this.loading = true;\n    this.auth_ser.register(this.myform.value).subscribe(\n      res=>{\n        console.log(res.user);\n       // localStorage.setItem('access_token',res.access_token)\n        this.toastr.success(\"rigisterd successfuly\", \"Success\")\n        this.router.navigate(['../auth'])\n      },\n      err=>{\n        this.toastr.error(\"This email is already in use! \", \"Error\")\n      }\n    )\n  }\n\n  showPassword() {\n      this.ShowPassord = !this.ShowPassord\n  }\n}\n","<section class=\"body\">\n    <div class=\"container\">\n        <form [formGroup]=\"myform\" (submit)='register()'>\n            <h1 class=\"text-center\">register</h1>\n            <div class='form-group'>\n                <label for=\"\"> Name  </label> &nbsp;\n                <input formControlName='name' [ngClass]=\"{'is-invalid': submited && f.name.errors}\"   class='form-control' placeholder=\"Name\">\n            </div>\n            <div class='form-group'>\n                <label for=\"\"> email </label> \n                <input type=\"email\" formControlName='email' [ngClass]=\"{'is-invalid': submited && f.email.errors}\"   class='form-control' placeholder=\"Email\">\n            </div>\n    \n            <div class='form-group pass_group'>\n                <label for=\"postDescription\"> password </label>\n                <input [type]=\"ShowPassord == false ? 'password' : 'text'\" formControlName='password' name=\"password\" [ngClass]=\"{'is-invalid': submited && f.password.errors}\"   rows=\"6\" class=\"form-control\" placeholder=\"Password\" minlength=\"8\" >\n                <i class=\"fa\" [hidden]=\"!myform.controls.password?.value\" [ngClass]=\"{'fa-eye-slash': !ShowPassord,'fa-eye': ShowPassord }\" (click)=\"showPassword()\"> </i>\n            </div>\n  \n            <div class='form-group'>\n                <label for=\"\"> Age  </label> &nbsp;\n                <input formControlName='age' [ngClass]=\"{'is-invalid': submited && f.name.errors}\"   class='form-control' placeholder=\"age\">\n            </div>\n\n            <button class=\"btn btn-primary\"> register </button>\n            <br>\n            <p class=\"text-center\">  have an acount ? <a routerLink='/auth'> Login </a></p>\n\n            <!--\n               <button [disabled]=\"loading\" class=\"btn btn-primary\">\n                    <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\n                    register\n               </button>\n            -->\n        </form>\n    </div>\n</section>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LogInComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\n\nconst routes: Routes = [\n  { path: '', component: LogInComponent },\n  { path: 'login', component: LogInComponent },\n  { path: 'register', component: RegisterComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AuthRoutingModule { }\n"],"sourceRoot":"webpack:///"}